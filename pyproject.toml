[build-system]
requires = ['hatchling']
build-backend = 'hatchling.build'

[tool.hatch.version]
path = 'dnserver/version.py'

[project]
name = 'dnserver'
description = 'Simple DNS server written in python for use in development and testing.'
authors = [{name = 'Samuel Colvin', email = 's@muelcolvin.com'}]
license = {file = 'LICENSE'}
readme = 'README.md'
classifiers = [
    'Development Status :: 4 - Beta',
    'Environment :: Console',
    'Intended Audience :: Developers',
    'Intended Audience :: Information Technology',
    'Intended Audience :: System Administrators',
    'License :: OSI Approved :: MIT License',
    'Operating System :: Unix',
    'Operating System :: POSIX :: Linux',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Topic :: Internet',
    'Topic :: Internet :: Name Service (DNS)',
    'Topic :: Software Development :: Libraries :: Python Modules',
    'Topic :: System :: Systems Administration',
    'Topic :: Software Development :: Testing',
    'Topic :: Software Development :: Testing :: Mocking',
]
requires-python = '>=3.7'
dependencies = [
    'dnslib>=0.9.20',
    'tomli;python_version<"3.11"',
    'typing_extensions;python_version<"3.8"',
]
dynamic = ['version']

[project.scripts]
dnserver = 'dnserver.cli:cli'

[project.urls]
Homepage = 'https://github.com/samuelcolvin/dnserver'
Documentation = 'https://github.com/samuelcolvin/dnserver'
Source = 'https://github.com/samuelcolvin/dnserver'
Changelog = 'https://github.com/samuelcolvin/dnserver/releases'

[tool.pytest.ini_options]
testpaths = 'tests'
filterwarnings = ['error']
timeout = 10

[tool.coverage.run]
source = ['dnserver']
branch = true
omit = ['dnserver/__main__.py']

[tool.coverage.report]
precision = 2
exclude_lines = [
    'pragma: no cover',
    'raise NotImplementedError',
    'raise NotImplemented',
    'if TYPE_CHECKING:',
    '@overload',
]

[tool.flake8]
max_line_length = 120
max_complexity = 14
inline_quotes = 'single'
multiline_quotes = 'double'

[tool.black]
color = true
line-length = 120
target-version = ['py37', 'py38', 'py39', 'py310', 'py311']
skip-string-normalization = true

[tool.isort]
line_length = 120
known_third_party = 'foxglove'
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
combine_as_imports = true
color_output = true
